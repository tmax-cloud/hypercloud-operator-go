apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: hypercloud-system
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: namespaceclaims.claim.tmax.io
spec:
  group: claim.tmax.io
  names:
    kind: NamespaceClaim
    listKind: NamespaceClaimList
    plural: namespaceclaims
    shortNames:
    - nsc
    singular: namespaceclaim
  scope: Cluster
  validation:
    openAPIV3Schema:
      description: kubebuilder:subresource:status might be use NamespaceClaim is the
        Schema for the namespaceclaims API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: NamespaceClaimSpec defines the desired state of NamespaceClaim
          properties:
            hard:
              additionalProperties:
                anyOf:
                - type: integer
                - type: string
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
              description: ResourceList is a set of (resource name, quantity) pairs.
              type: object
          type: object
        status:
          description: NamespaceClaimStatus defines the observed state of NamespaceClaim
          properties:
            lastTransitionTime:
              format: date-time
              type: string
            message:
              type: string
            reason:
              type: string
            status:
              description: NamespaceClaimStatusType defines namespaceclaim status
                type
              enum:
              - Awaiting
              - Success
              - Reject
              - Error
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: rolebindingclaims.claim.tmax.io
spec:
  group: claim.tmax.io
  names:
    kind: RoleBindingClaim
    listKind: RoleBindingClaimList
    plural: rolebindingclaims
    shortNames:
    - rbc
    singular: rolebindingclaim
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: RoleBindingClaim is the Schema for the rolebindingclaims API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        resourceName:
          type: string
        roleRef:
          description: RoleRef contains information that points to the role being
            used
          properties:
            apiGroup:
              description: APIGroup is the group for the resource being referenced
              type: string
            kind:
              description: Kind is the type of resource being referenced
              type: string
            name:
              description: Name is the name of resource being referenced
              type: string
          required:
          - apiGroup
          - kind
          - name
          type: object
        status:
          description: RoleBindingClaimStatus defines the observed state of RoleBindingClaim
          properties:
            lastTransitionTime:
              format: date-time
              type: string
            message:
              type: string
            reason:
              type: string
            status:
              enum:
              - Awaiting
              - Success
              - Reject
              - Error
              type: string
          type: object
        subjects:
          items:
            description: Subject contains a reference to the object or user identities
              a role binding applies to.  This can either hold a direct API object
              reference, or a value for non-objects such as user and group names.
            properties:
              apiGroup:
                description: APIGroup holds the API group of the referenced subject.
                  Defaults to "" for ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io"
                  for User and Group subjects.
                type: string
              kind:
                description: Kind of object being referenced. Values defined by this
                  API group are "User", "Group", and "ServiceAccount". If the Authorizer
                  does not recognized the kind value, the Authorizer should report
                  an error.
                type: string
              name:
                description: Name of the object being referenced.
                type: string
              namespace:
                description: Namespace of the referenced object.  If the object kind
                  is non-namespace, such as "User" or "Group", and this value is not
                  empty the Authorizer should report an error.
                type: string
            required:
            - kind
            - name
            type: object
          type: array
      required:
      - resourceName
      - roleRef
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: hypercloud-leader-election-role
  namespace: hypercloud-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: hypercloud-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - rolebindings
  verbs:
  - '*'
- apiGroups:
  - claim.tmax.io
  resources:
  - namespaceclaims
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - claim.tmax.io
  resources:
  - namespaceclaims/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - claim.tmax.io
  resources:
  - rolebindingclaims
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - claim.tmax.io
  resources:
  - rolebindingclaims/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: hypercloud-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: hypercloud-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: hypercloud-leader-election-rolebinding
  namespace: hypercloud-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: hypercloud-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: hypercloud-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hypercloud-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hypercloud-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: hypercloud-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hypercloud-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hypercloud-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: hypercloud-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: hypercloud-controller-manager-metrics-service
  namespace: hypercloud-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: hypercloud-controller-manager
  namespace: hypercloud-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        command:
        - /manager
        image: hypercloud:v07
        name: manager
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
      terminationGracePeriodSeconds: 10
